// Code generated by mockery v2.42.3. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// PaymentScheduleUsecase is an autogenerated mock type for the PaymentScheduleUsecase type
type PaymentScheduleUsecase struct {
	mock.Mock
}

// MakePayment provides a mock function with given fields: ctx, loanID, amount
func (_m *PaymentScheduleUsecase) MakePayment(ctx context.Context, loanID uint, amount float64) error {
	ret := _m.Called(ctx, loanID, amount)

	if len(ret) == 0 {
		panic("no return value specified for MakePayment")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, uint, float64) error); ok {
		r0 = rf(ctx, loanID, amount)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewPaymentScheduleUsecase creates a new instance of PaymentScheduleUsecase. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPaymentScheduleUsecase(t interface {
	mock.TestingT
	Cleanup(func())
}) *PaymentScheduleUsecase {
	mock := &PaymentScheduleUsecase{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
