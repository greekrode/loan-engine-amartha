// Code generated by mockery v2.42.3. DO NOT EDIT.

package mocks

import (
	context "context"

	domain "github.com/greekrode/loan-engine-amartha/domain"
	gorm "gorm.io/gorm"

	mock "github.com/stretchr/testify/mock"
)

// PaymentRepository is an autogenerated mock type for the PaymentRepository type
type PaymentRepository struct {
	mock.Mock
}

// CreatePayment provides a mock function with given fields: ctx, payment, tx
func (_m *PaymentRepository) CreatePayment(ctx context.Context, payment *domain.Payment, tx *gorm.DB) error {
	ret := _m.Called(ctx, payment, tx)

	if len(ret) == 0 {
		panic("no return value specified for CreatePayment")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *domain.Payment, *gorm.DB) error); ok {
		r0 = rf(ctx, payment, tx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewPaymentRepository creates a new instance of PaymentRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPaymentRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *PaymentRepository {
	mock := &PaymentRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
